{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst input = document.querySelector('#datetime-picker');\n\nconst daysRef = document.querySelector('[data-days]');\nconst hoursRef = document.querySelector('[data-hours]');\nconst minutesRef = document.querySelector('[data-minutes]');\nconst secondsRef = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet timerId = null;\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      startBtn.disabled = true;\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n    } else {\n      startBtn.disabled = false;\n      userSelectedDate = selectedDate;\n    }\n  },\n};\n\nflatpickr(input, options);\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  input.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const diff = userSelectedDate - now;\n\n    if (diff <= 0) {\n      clearInterval(timerId);\n      updateTimer({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      input.disabled = false;\n      return;\n    }\n\n    const time = convertMs(diff);\n    updateTimer(time);\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction updateTimer({ days, hours, minutes, seconds }) {\n  daysRef.textContent = addLeadingZero(days);\n  hoursRef.textContent = addLeadingZero(hours);\n  minutesRef.textContent = addLeadingZero(minutes);\n  secondsRef.textContent = addLeadingZero(seconds);\n}\n"],"names":["startBtn","input","daysRef","hoursRef","minutesRef","secondsRef","userSelectedDate","timerId","options","selectedDates","selectedDate","iziToast","flatpickr","diff","updateTimer","time","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value"],"mappings":"iyBAMA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAQ,SAAS,cAAc,kBAAkB,EAEjDC,EAAU,SAAS,cAAc,aAAa,EAC9CC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAa,SAAS,cAAc,gBAAgB,EACpDC,EAAa,SAAS,cAAc,gBAAgB,EAE1D,IAAIC,EAAmB,KACnBC,EAAU,KAEdP,EAAS,SAAW,GAEpB,MAAMQ,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtBV,EAAS,SAAW,GACpBW,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAClB,CAAO,IAEDX,EAAS,SAAW,GACpBM,EAAmBI,EAEtB,CACH,EAEAE,EAAUX,EAAOO,CAAO,EAExBR,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBC,EAAM,SAAW,GAEjBM,EAAU,YAAY,IAAM,CAE1B,MAAMM,EAAOP,EADD,IAAI,KAGhB,GAAIO,GAAQ,EAAG,CACb,cAAcN,CAAO,EACrBO,EAAY,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EACzDb,EAAM,SAAW,GACjB,MACD,CAED,MAAMc,EAAOC,EAAUH,CAAI,EAC3BC,EAAYC,CAAI,CACjB,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAAST,EAAY,CAAE,KAAAI,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtDnB,EAAQ,YAAcoB,EAAeJ,CAAI,EACzCf,EAAS,YAAcmB,EAAeH,CAAK,EAC3Cf,EAAW,YAAckB,EAAeF,CAAO,EAC/Cf,EAAW,YAAciB,EAAeD,CAAO,CACjD"}